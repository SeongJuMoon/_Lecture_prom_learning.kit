# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name:  prometheus-stack-kube-prom-admission
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
webhooks:
  - name: prometheusrulemutate.monitoring.coreos.com
    failurePolicy: Ignore
    rules:
      - apiGroups:
          - monitoring.coreos.com
        apiVersions:
          - "*"
        resources:
          - prometheusrules
        operations:
          - CREATE
          - UPDATE
    clientConfig:
      service:
        namespace: monitoring
        name: prometheus-stack-kube-prom-operator
        path: /admission-prometheusrules/mutate
    timeoutSeconds: 10
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
---
# ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name:  prometheus-stack-kube-prom-admission
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
webhooks:
  - name: prometheusrulemutate.monitoring.coreos.com
    failurePolicy: Ignore
    rules:
      - apiGroups:
          - monitoring.coreos.com
        apiVersions:
          - "*"
        resources:
          - prometheusrules
        operations:
          - CREATE
          - UPDATE
    clientConfig:
      service:
        namespace: monitoring
        name: prometheus-stack-kube-prom-operator
        path: /admission-prometheusrules/validate
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
---
# Job
apiVersion: batch/v1
kind: Job
metadata:
  name:  prometheus-stack-kube-prom-admission-create
  namespace: monitoring
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-create    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
spec:
  template:
    metadata:
      name:  prometheus-stack-kube-prom-admission-create
      labels:
        app: kube-prometheus-stack-admission-create        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: prometheus-stack
        app.kubernetes.io/version: "39.9.0"
        app.kubernetes.io/part-of: kube-prometheus-stack
        chart: kube-prometheus-stack-39.9.0
        release: "prometheus-stack"
        heritage: "Helm"
    spec:
      containers:
        - name: create
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.2.0
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=prometheus-stack-kube-prom-operator,prometheus-stack-kube-prom-operator.monitoring.svc
            - --namespace=monitoring
            - --secret-name=prometheus-stack-kube-prom-admission
          resources:
            {}
      restartPolicy: OnFailure
      serviceAccountName: prometheus-stack-kube-prom-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
---
# ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name:  prometheus-stack-kube-prom-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  prometheus-stack-kube-prom-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-stack-kube-prom-admission
subjects:
  - kind: ServiceAccount
    name: prometheus-stack-kube-prom-admission
    namespace: monitoring
---
# Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  prometheus-stack-kube-prom-admission
  namespace: monitoring
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  prometheus-stack-kube-prom-admission
  namespace: monitoring
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-stack-kube-prom-admission
subjects:
  - kind: ServiceAccount
    name: prometheus-stack-kube-prom-admission
    namespace: monitoring
---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  prometheus-stack-kube-prom-admission
  namespace: monitoring
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
---
# Job
apiVersion: batch/v1
kind: Job
metadata:
  name:  prometheus-stack-kube-prom-admission-patch
  namespace: monitoring
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission-patch    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/version: "39.9.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-39.9.0
    release: "prometheus-stack"
    heritage: "Helm"
spec:
  template:
    metadata:
      name:  prometheus-stack-kube-prom-admission-patch
      labels:
        app: kube-prometheus-stack-admission-patch        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: prometheus-stack
        app.kubernetes.io/version: "39.9.0"
        app.kubernetes.io/part-of: kube-prometheus-stack
        chart: kube-prometheus-stack-39.9.0
        release: "prometheus-stack"
        heritage: "Helm"
    spec:
      containers:
        - name: patch
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.2.0
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=prometheus-stack-kube-prom-admission
            - --namespace=monitoring
            - --secret-name=prometheus-stack-kube-prom-admission
            - --patch-failure-policy=Fail
          resources:
            {}
      restartPolicy: OnFailure
      serviceAccountName: prometheus-stack-kube-prom-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
